; This file contains code to make tuner studio operate.
; Author: Alireza Eskandari
; this should stop TS from looking for the CAN ID in the 2nd byte location and allow the page reads to work correctly.
enable2ndByteCanID = false

[TunerStudio]
    versionInfo    = "S"  ; Put this in the title bar.
    queryCommand   = "Q"  ; Verify against signature.
    signature      = "JimStim dev.2025.07"
    ; TS will try to use legacy temp units in some cases, showing "deg F" on a CLT gauge that's actually deg C
    useLegacyFTempUnits = false

[PcVariables]


[Constants]
;The primary goal of this section is to map the controller calibration data to referenced variables with Meta data attributes:
;Formatting of a Constant entry:
; name = class, type, offset, shape, units, scale, translate, lo, hi, digits
; new packet serial format with CRC
;   messageEnvelopeFormat = msEnvelope_1.0

	endianness			= little
	nPages				= 1

	pageReadCommand		= "r%2o%2c"
	burnCommand			= "B"
	pageValueWrite		= "W%2o%2c%v"
	pageChunkWrite		= "W%2o%2c%v"
	crc32CheckCommand	= "k"


	blockingFactor = 1024 ; max chunk size
    pageSize            = 4800
    ; This page is used for settings
    page = 1
    ;  name       = bits,   type,    offset, bits
    ;  name       = array,  type,    offset, shape, units,     scale, translate,    lo,      hi, digits
    ;  name       = scalar, type,    offset,        units,     scale, translate,    lo,      hi, digits
    ve_table_1           = array, F32, 0,    [16x16], "%",   1,0,0,255,0
    ve_table_1_rpm_bins  = array, F32, 1024, [16], "RPM",    1,0,0,6000,0
    ve_table_1_load_bins = array, F32, 1088, [16], "kPa",    1,0,0,250,0

    ve_table_2           = array, F32, 1152, [16x16], "%",   1,0,0,255,0
    ve_table_2_rpm_bins  = array, F32, 2176, [16], "RPM",    1,0,0,6000,0
    ve_table_2_load_bins = array, F32, 2240, [16], "kPa",    1,0,0,250,0

    ign_table_1          = array, F32, 2304, [16x16], "deg",0.5,0,0,45,1
    ign_table_1_rpm_bins = array, F32, 3328, [16], "RPM",    1,0,0,6000,0
    ign_table_1_load_bins= array, F32, 3392, [16], "kPa",    1,0,0,120,0

    ign_table_2          = array, F32, 3456, [16x16], "deg",0.5,0,0,45,1
    ign_table_2_rpm_bins = array, F32, 4480, [16], "RPM",    1,0,0,6000,0
    ign_table_2_load_bins= array, F32, 4544, [16], "kPa",    1,0,0,120,0

    ; -------------------------------
    ; Scalars - Cranking / Ignition
    ; -------------------------------
    cranking_rpm_threshold        = scalar, F32, 4608, "RPM",  1,0,100,700,0
    cranking_advance              = scalar, F32, 4612, "deg",  1,0,0,20,1
    cranking_throttle             = scalar, F32, 4616, "%",    1,0,1,30,1

    ignition_dwell                = scalar, F32, 4620, "ms",   1,0,0.5,4,1
    multi_spark_rpm_threshold     = scalar, F32, 4624, "RPM",  1,0,1800,3000,0
    multi_spark_rest_time_ms      = scalar, F32, 4628, "ms",   1,0,0.2,2,1
    multi_spark_max_trailing_angle= scalar, F32, 4632, "deg",  1,0,5,30,1

    stoich_afr_gas                = scalar, F32, 4636, "AFR",  1,0,5,20,1
    stoich_afr_petrol             = scalar, F32, 4640, "AFR",  1,0,5,20,1

    ; -------------------------------
    ; Governor PID
    ; -------------------------------
    governer_target_rpm            = scalar, F32, 4644, "RPM", 1,0,1000,3500,0
    governer_idle_rpm              = scalar, F32, 4648, "RPM", 1,0,700,1250,0
    governer_pid_Kp                = scalar, F32, 4652, "",    1,0,0,50,1
    governer_pid_Ki                = scalar, F32, 4656, "",    1,0,0,25,1
    governer_pid_Kd                = scalar, F32, 4660, "",    1,0,0,10,3
    governer_pid_limit_integrator_min = scalar, F32, 4664, "", 1,0,0,100,0
    governer_pid_limit_integrator_max = scalar, F32, 4668, "", 1,0,0,100,0
    governer_pid_derivative_filter_tau= scalar, F32, 4672, "s",1,0,0,1,3

    ; -------------------------------
    ; ETB1 PID
    ; -------------------------------
    etb1_pid_Kp                     = scalar, F32, 4676, "", 1,0,0,50,1
    etb1_pid_Ki                     = scalar, F32, 4680, "", 1,0,0,25,1
    etb1_pid_Kd                     = scalar, F32, 4684, "", 1,0,0,10,3
    etb1_pid_limit_integrator_min   = scalar, F32, 4688, "", 1,0,0,100,0
    etb1_pid_limit_integrator_max   = scalar, F32, 4692, "", 1,0,0,100,0
    etb1_pid_derivative_filter_tau  = scalar, F32, 4696, "s",1,0,0,1,3

    ; -------------------------------
    ; ETB2 PID
    ; -------------------------------
    etb2_pid_Kp                     = scalar, F32, 4700, "", 1,0,0,50,1
    etb2_pid_Ki                     = scalar, F32, 4704, "", 1,0,0,25,1
    etb2_pid_Kd                     = scalar, F32, 4708, "", 1,0,0,10,3
    etb2_pid_limit_integrator_min   = scalar, F32, 4712, "", 1,0,0,100,0
    etb2_pid_limit_integrator_max   = scalar, F32, 4716, "", 1,0,0,100,0
    etb2_pid_derivative_filter_tau  = scalar, F32, 4720, "s",1,0,0,1,3

    ; -------------------------------
    ; Protections / Fan Temps
    ; -------------------------------
    protection_clt_shutdown_temp        = scalar, F32, 4724, "degC",1,0,80,120,0
    protection_clt_load_disconnect_temp = scalar, F32, 4728, "degC",1,0,80,120,0

    fan1_on_temp    = scalar, F32, 4732, "degC",1,0,60,120,0
    fan1_off_temp   = scalar, F32, 4736, "degC",1,0,60,120,0
    fan2_on_temp    = scalar, F32, 4740, "degC",1,0,60,120,0
    fan2_off_temp   = scalar, F32, 4744, "degC",1,0,60,120,0

    ; -------------------------------
    ; uint16_t
    ; -------------------------------
    rpm_limiter                      = scalar, U16, 4748, "RPM",1,0,1000,6000,0
    engine_displacement_cc           = scalar, U16, 4750, "cc", 1,0,100,8000,0

    tps1_calib_wide_open_throttle_adc_value = scalar, U16, 4752, "",1,0,0,4095,0
    tps1_calib_closed_throttle_adc_value    = scalar, U16, 4754, "",1,0,0,4095,0
    tps2_calib_wide_open_throttle_adc_value = scalar, U16, 4756, "",1,0,0,4095,0
    tps2_calib_closed_throttle_adc_value    = scalar, U16, 4758, "",1,0,0,4095,0

    ; -------------------------------
    ; uint8_t Flags / Enums
    ; -------------------------------
    firing_order    = bits, U08, 4760, [0:7], 0="1342", 1="153624"
    fuel_type       = bits, U08, 4761, [0:2], 0="Natural Gas",1="Petrol",2="Dual Fuel"

    trigger1_type   = bits, U08, 4762, [0:7], 0="60-2",1="Other"
    trigger1_filtering= bits, U08, 4763, [0:2], 0="None",1="Low",2="Med",3="High"

    trigger2_type   = bits, U08, 4764, [0:7], 0="60-2",1="Other"
    trigger2_filtering=bits, U08, 4765, [0:2], 0="None",1="Low",2="Med",3="High"
    trigger2_enabled= bits, U08, 4766, [0:1], 0="No",1="Yes"

    number_of_injectors = scalar, U08, 4767, "", 1,0,1,8,0
    injection_mode      = bits, U08, 4768, [0:7], 0="Batch",1="Sequential"

    ignition_mode       = bits, U08, 4769, [0:7], 0="Off", 1="One coil", 2="Wasted spark", 3="Coil-on-plug"
    multi_spark_enabled = bits, U08, 4770, [0:1], 0="Disabled", 1="Enabled"
    multi_spark_number_of_sparks = scalar, U08, 4771, "sparks", 1, 0, 1, 5, 0

    tps1_calib_is_inverted = bits, U08, 4772, [0:1], 0="No", 1="Yes"
    tps2_calib_is_inverted = bits, U08, 4773, [0:1], 0="No", 1="Yes"

    sensor_clt_type = bits, U08, 4774, [0:7], 0="Nissan 5k"
    sensor_iat_type = bits, U08, 4775, [0:7], 0="Bosch 816"
    sensor_map_type = bits, U08, 4776, [0:7], 0="Bosch 816"

    protection_oil_pressure_time    = scalar, U08, 4777, "s", 1, 0, 1, 10, 0
    protection_oil_pressure_enabled = bits, U08, 4778, [0:1], 0="No",1="Yes"
    protection_clt_enabled          = bits, U08, 4779, [0:1], 0="No",1="Yes"
    protection_clt_load_disconnect_enabled= bits, U08, 4780, [0:1], 0="No",1="Yes"

    etb1_enabled      = bits, U08, 4781, [0:1], 0="No",1="Yes"
    etb2_enabled      = bits, U08, 4782, [0:1], 0="No",1="Yes"
    etb1_motor_inverted= bits, U08, 4783, [0:1], 0="No",1="Yes"
    etb2_motor_inverted= bits, U08, 4784, [0:1], 0="No",1="Yes"

    fan1_enabled      = bits, U08, 4785, [0:1], 0="No",1="Yes"
    fan2_enabled      = bits, U08, 4786, [0:1], 0="No",1="Yes"

    sensor_tps1_type = bits, U08, 4787, [0:7], 0="Custom",1="Bosch ETB"
    sensor_tps2_type = bits, U08, 4788, [0:7], 0="Custom",1="Bosch ETB"


[OutputChannels]
	ochGetCommand	= "O"

; see TS_OUTPUT_SIZE in source code
	ochBlockSize	= 84

    status_critical_error        = bits, U32, 0, [0:0]
    status_check_engine          = bits, U32, 0, [1:1]
    status_warning               = bits, U32, 0, [2:2]
    status_trigger1_synced       = bits, U32, 0, [3:3]
    status_trigger2_synced       = bits, U32, 0, [4:4]
    status_trigger_error         = bits, U32, 0, [5:5]
    status_fan1_on               = bits, U32, 0, [6:6]
    status_fan2_on               = bits, U32, 0, [7:7]
    status_need_burn             = bits, U32, 0, [8:8]
    status_main_relay_on         = bits, U32, 0, [9:9]
    status_gas_solenoid_on       = bits, U32, 0, [10:10]
    status_fuel_pump_on          = bits, U32, 0, [11:11]
    status_o2_heater_on          = bits, U32, 0, [12:12]
    status_tps1_error            = bits, U32, 0, [13:13]
    status_tps2_error            = bits, U32, 0, [14:14]
    status_map_error             = bits, U32, 0, [15:15]
    status_clt_error             = bits, U32, 0, [16:16]
    status_iat_error             = bits, U32, 0, [17:17]
    status_ignition_error        = bits, U32, 0, [18:18]
    status_injector_error        = bits, U32, 0, [19:19]
    status_rev_limit_ignition    = bits, U32, 0, [20:20]
    status_rev_limit_etb         = bits, U32, 0, [21:21]
    status_etb1_ok               = bits, U32, 0, [22:22]
    status_etb2_ok               = bits, U32, 0, [23:23]
    status_fuel_pressure_low_gas    = bits, U32, 0, [24:24]
    status_fuel_pressure_low_petrol = bits, U32, 0, [25:25]
    status_cranking                 = bits, U32, 0, [26:26]
    status_running                  = bits, U32, 0, [27:27]
    status_reserved1                = bits, U32, 0, [28:28]
    status_reserved2                = bits, U32, 0, [29:29]
    status_reserved3                = bits, U32, 0, [30:30]
    status_reserved4                = bits, U32, 0, [31:31]

    sync_loss_counter     = scalar, U32, 4, "", 1, 0
    total_revolutions     = scalar, U32, 8, "", 1, 0
    seconds               = scalar, U32, 12, "Seconds", 1, 0
    crankshaft_angle      = scalar, F32, 16, "deg", 1, 0
    camshaft_angle        = scalar, F32, 20, "deg", 1, 0
    rpm                   = scalar, F32, 24, "RPM", 1, 0
    governer_target_rpm   = scalar, F32, 28, "RPM", 1, 0
    firing_interval_deg   = scalar, F32, 32, "deg", 1, 0
    ignition_advance_deg  = scalar, F32, 36, "deg", 1, 0
    tps1                  = scalar, F32, 40, "%", 1, 0
    tps2                  = scalar, F32, 44, "%", 1, 0
    map_kpa               = scalar, F32, 48, "kPa", 1, 0
    baro_kpa              = scalar, F32, 52, "kPa", 1, 0
    clt_degc              = scalar, F32, 56, "C", 1, 0
    iat_degc              = scalar, F32, 60, "C", 1, 0
    egt_degc              = scalar, F32, 64, "C", 1, 0
    lambda                = scalar, F32, 68, "", 1, 0
    vbatt_volts           = scalar, F32, 72, "V", 1, 0
    dwell_actual          = scalar, F32, 76, "ms", 1, 0
    spinning_state        = scalar, U08, 80, "", 1, 0
    governer_status       = scalar, U08, 81, "", 1, 0
    oil_pressure_ok       = scalar, U08, 82, "", 1, 0
    multi_spark_count     = scalar, U08, 83, "", 1, 0

[Replay]
[ExtendedReplay]
[TableEditor]
;table_id, map3d_id, "title"
    table = veTable1Tbl, veTable1Map, "VE Table 1", 2
        ; constant, OutputChannel
        xBins = ve_table_1_rpm_bins, rpm
        yBins = ve_table_1_load_bins, map_kpa
        zBins = ve_table_1
        upDownLabel = "RICHER", "LEANER"
        gridHeight = 2.0
        gridOrient = 250, 0, 340 ; Space 123 rotation of grid in degrees.

;table_id, map3d_id, "title"
    table = veTable2Tbl, veTable2Map, "VE Table 2", 2
        ; constant, OutputChannel
        xBins = ve_table_2_rpm_bins, rpm
        yBins = ve_table_2_load_bins, map_kpa
        zBins = ve_table_2
        upDownLabel = "RICHER", "LEANER"
        gridHeight = 2.0
        gridOrient = 250, 0, 340 ; Space 123 rotation of grid in degrees.

;table_id, map3d_id, "title"
    table = ignTable1Tbl, ignTable1Map, "Ignition Table 1", 2
        ; constant, OutputChannel
        xBins = ign_table_1_rpm_bins, rpm
        yBins = ign_table_1_load_bins, map_kpa
        zBins = ign_table_1
        upDownLabel = "ADVANCED", "RETARDED"
        gridHeight = 2.0
        gridOrient = 250, 0, 340 ; Space 123 rotation of grid in degrees.

;table_id, map3d_id, "title"
    table = ignTable2Tbl, ignTable2Map, "Ignition Table 2", 2
        ; constant, OutputChannel
        xBins = ign_table_2_rpm_bins, rpm
        yBins = ign_table_2_load_bins, map_kpa
        zBins = ign_table_2
        upDownLabel = "ADVANCED", "RETARDED"
        gridHeight = 2.0
        gridOrient = 250, 0, 340 ; Space 123 rotation of grid in degrees.


[GaugeConfigurations]
   ;-------------------------------------------------------------------------------
   ; Define a gauge's characteristics here, then go to a specific layout
   ; block (Tuning or FrontPage) and use the name you've defined here to
   ; display that gauge in a particular position.
   ;
   ; Name  = Case-sensitive, user-defined name for this gauge configuration.
   ; Var   = Case-sensitive name of variable to be displayed, see the
   ;         OutputChannels block in this file for possible values.
   ; Title = Title displayed at the top of the gauge.
   ; Units = Units displayed below value on gauge.
   ; Lo    = Lower scale limit of gauge.
   ; Hi    = Upper scale limit of gauge.
   ; LoD   = Lower limit at which danger color is used for gauge background.
   ; LoW   = Lower limit at which warning color is used.
   ; HiW   = Upper limit at which warning color is used.
   ; HiD   = Upper limit at which danger color is used.
   ; vd    = Decimal places in displayed value
   ; ld    = Label decimal places for display of Lo and Hi, above.

    gaugeCategory = "Main"
    ;Name               Var            Title                                Units     Lo     Hi     LoD    LoW   HiW   HiD vd ld
    rpm_gauge			= rpm,			"RPM - engine speed",		"RPM",		0, 5000,	500, 500, 4000,  5000,	0,	0
	map_gauge		    = map_kpa,					"MAP",		"kPa",		0,	120,		10,	0,	80,	95,	0,	0
	tps_gauge			= tps1,		"Throttle position",			"%",		0,	100,		0,		0,	100,	100,	1,	1
	lambda_gauge		= lambda, "Lambda",	"",		0.65,	1.2,		0.7,	0.75,		1.1,	1.15,	3,	2
	advance_gauge       = ignition_advance_deg,		"Timing: ignition",	"degrees",	-100,	100,	-999,	-999,	999,	999,	1, 1
	dwell_gauge		    = dwell_actual,			"Dwell",		"mSec",		0,	10,	0.5,	1.0,	6.0,	8.0,	1, 1
	vbatt_gauge		    = vbatt_volts,		"Battery",			"V",		0,	18,		6,	10,		15,	16,	1,	1
    clt_gauge			= clt_degc,		"Coolant temp",		"C",		-40,	140,	-15,		1,		95,	110,	1,	1
    tps2_gauge          = tps2,		"Throttle position",			"%",		0,	100,		0,		0,	100,	100,	1,	1
    
    gaugeCategory = "Sensors"

    oil_pressure_guage = oil_pressure_ok, "Oil pressure ok",		"",		0,	1,		0,	0,	1,	1,	0,	0
    exhaust_gas_temp_gauge = egt_degc, "EGT",		"C",		0,	1000,		0,	0,	800,	900,	0,	0
    sync_loss_counter_gauge = sync_loss_counter, "Trigger sync losses",		"",		0,	200,		0,	0,	20,	100,	0,	0
[ControllerCommands]

[PortEditor]
[CurveEditor]
[TriggerWheel]
[UiDialogs]

[UiDialogs]
dialog = base_engine_settings_dialog, "Base Engine Settings"
    field = "Firing order", firing_order
    field = "Engine displacement", engine_displacement_cc
    field = "Trigger 1 type", trigger1_type
    field = "Trigger 1 filtering", trigger1_filtering
    field = "Trigger 2 enabled", trigger2_enabled
    field = "Trigger 2 type", trigger2_type, {trigger2_enabled}
    field = "Trigger 2 filtering", trigger2_filtering, {trigger2_enabled}
    
dialog = protections_dialog, "Limits and fallbacks dialog"
    field = "RPM limiter", rpm_limiter
    field = "Enable oil pressure protection", protection_oil_pressure_enabled
    field = "Oil pressure protection trip time", protection_oil_pressure_time, {protection_oil_pressure_enabled}
    field = "Enable coolant temp protection", protection_clt_enabled
    field = "Engine shutdown temp (degC)", protection_clt_shutdown_temp, {protection_clt_enabled}
    field = "Enable coolant temp protection load disconnect", protection_clt_load_disconnect_enabled
    field = "Load disconnect coolant temp", protection_clt_load_disconnect_temp, {protection_clt_enabled && protection_clt_load_disconnect_enabled}

dialog = fuel_setup_dialog, "Fuel settings"
    field = "Fuel type", fuel_type
    field = "Gas stoich air fuel ratio", stoich_afr_gas, {fuel_type != 1}
    field = "Petrol stoich air fuel ratio", stoich_afr_petrol, {fuel_type != 0}

dialog = ve_table1_dialog, "Volumetric efficiency table 1", border
    panel = veTable1Tbl, Center

dialog = ve_table2_dialog, "Volumetric efficiency table 2", border
    panel = veTable2Tbl, Center

dialog = ign_table1_dialog, "Ignition table 1", border
    panel = ignTable1Tbl, Center
dialog = ign_table2_dialog, "Ignition table 1", border
    panel = ignTable2Tbl, Center

dialog = clt_fuel_corr_curve, "CLT Correction Curve", border
    
dialog = iat_fuel_corr_curve, "IAT Correction Curve", border
    
dialog = fuel_closed_loop_dialog, "Closed Loop Fuel Correction"
    
dialog = labmda_target, "Target Lambda Table", border
    
dialog = accel_enrich, "Acceleration Enrichment Settings"
    
dialog = tpsTpsDialog, "TPS/TPS Acceleration Extra Fuel"
    
dialog = tpsTspRpmCorrection, "TPS/TPS Extra Fuel RPM Correction"
    
dialog = ignition_settings_dialog, "Ignition Settings"
    field = "Ignition dwell (ms)", ignition_dwell
    field = "Ignition mode", ignition_mode
    field = "Multi spark enabled", multi_spark_enabled, {ignition_mode != 0}
    field = "Multi spark number of sparks", multi_spark_number_of_sparks, {multi_spark_enabled}
    field = "Multi spark RPM threshold", multi_spark_rpm_threshold, {multi_spark_enabled}
    field = "Multi spark rest time", multi_spark_rest_time_ms, {multi_spark_enabled}
    field = "multi spark max trailing angle", multi_spark_max_trailing_angle, {multi_spark_enabled}


dialog = cranking_dialog, "Cranking Settings"
    field = "Cranking RPM threshold", cranking_rpm_threshold
    field = "Cranking advance", cranking_advance
    field = "Cranking throttle", cranking_throttle

dialog = postCrankingEnrichmentTbl, "After-Start Enrichment Table", border
    
dialog = primingFuelPulsePanel, "Priming Pulse Settings"
    
dialog = cltCrankingCurve, "Fuel CLT Multiplier Curve", border
    
dialog = crankingTpsCurve, "Fuel TPS Multiplier Curve", border
    
dialog = crankingAdvanceCurve, "Cranking Ignition Advance Curve", border
    
dialog = governer_settings_dialog, "Governer settings"
    field = "Governer Idle RPM", governer_idle_rpm
    field = "Governer Target RPM", governer_target_rpm
    field = "Governer PID Kp", governer_pid_Kp
    field = "Governer PID Ki", governer_pid_Ki
    field = "Governer PID Kd", governer_pid_Kd
    field = "Governer PID Integrator Min", governer_pid_limit_integrator_min
    field = "Governer PID Integrator Max", governer_pid_limit_integrator_max
    field = "Governer PID Derivative Filter Tau", governer_pid_derivative_filter_tau

dialog = etb_settings_dialog, "Electronic throttle body settings"
    field = "ETB1 enabled", etb1_enabled
    field = "ETB1 PID Kp", etb1_pid_Kp
    field = "ETB1 PID Ki", etb1_pid_Ki
    field = "ETB1 PID Kd", etb1_pid_Kd
    field = "ETB1 PID Integrator Min", etb1_pid_limit_integrator_min
    field = "ETB1 PID Integrator Max", etb1_pid_limit_integrator_max
    field = "ETB1 PID Derivative Filter Tau", etb1_pid_derivative_filter_tau
    field = "ETB2 enabled", etb2_enabled
    field = "ETB2 PID Kp", etb2_pid_Kp
    field = "ETB2 PID Ki", etb2_pid_Ki
    field = "ETB2 PID Kd", etb2_pid_Kd
    field = "ETB2 PID Integrator Min", etb2_pid_limit_integrator_min
    field = "ETB2 PID Integrator Max", etb2_pid_limit_integrator_max
    field = "ETB2 PID Derivative Filter Tau", etb2_pid_derivative_filter_tau

dialog = fan_control_dialog
    field = "Fan 1 enabled", fan1_enabled
    field = "Fan 1 on temp", fan1_on_temp, {fan1_enabled}
    field = "Fan 1 off temp", fan1_off_temp, {fan1_enabled}
    field = "Fan 2 enabled", fan2_enabled
    field = "Fan 2 on temp", fan2_on_temp, {fan2_enabled}
    field = "Fan 2 off temp", fan2_off_temp, {fan2_enabled}

dialog = tps_sensors_dialog, "Throttle position sensors"
    field = "TPS sensor 1 type", sensor_tps1_type
    field = "TPS sensor 1 fully open adc value", tps1_calib_wide_open_throttle_adc_value, {sensor_tps1_type == 0}
    field = "TPS sensor 1 fully closed adc value", tps1_calib_closed_throttle_adc_value, {sensor_tps1_type == 0}
    field = "TPS sensor 2 inverted", tps1_calib_is_inverted, {sensor_tps1_type == 0}
    
    field = "TPS sensor 2 type", sensor_tps2_type
    field = "TPS sensor 2 fully open adc value", tps2_calib_wide_open_throttle_adc_value, {sensor_tps2_type == 0}
    field = "TPS sensor 2 fully closed adc value", tps2_calib_closed_throttle_adc_value, {sensor_tps2_type == 0}
    field = "TPS sensor 2 inverted", tps2_calib_is_inverted, {sensor_tps2_type == 0}
    

dialog = clt_sensor_dialog, "Coolant Temp Sensor"
    field = "Coolant sensor type", sensor_clt_type
dialog = iat_sensor_dialog, "Intake Air Temp Sensor"
    field = "Intake air temprature sensor type", sensor_iat_type
dialog = ego_sensor_dialog, "Exhaust gas temperature Sensor"
    field = "Thermocouple type"
    field = "Temperature offset"
dialog = map_sensor_dialog, "Manifold absolute pressure sensor"
    field = "MAP senosr type", sensor_map_type
dialog = oxy_sensor_dialog, "Alireza Wideband Controller Config"

[UserDefined]
[FTPBrowser]
[Menu]

   ;----------------------------------------------------------------------------
   ;  There are five pre-defined values that may be used to define your menus.
   ;  The first four allow access to the "standard" dialog boxes, the last one
   ;  merely draws a separator (horizontal line) in the menu.
   ;
   ;     std_constants
   ;     std_enrichments
   ;     std_realtime
   ;     std_warmup
   ;
   ;     std_separator
   ;
   ;  If you use any of the std_constants, std_enrichments or std_warmup
   ;  editors, they may be optionally suffixed with a page number (only
   ;  useful for multi-page code variants), which causes them to edit the
   ;  specified page.  If you leave off the page specifier, they edit logical
   ;  page one as specified in the Constants section.
   ;
   ;  There are four special menu names, which when used append to the standard
   ;  menus of the same name instead of creating a new one.  The menu names
   ;  are "File", "Communications", "Tools" and "Help".
   ;
   ;----------------------------------------------------------------------------

menuDialog = main

   menu = "Settings"
        subMenu = base_engine_settings_dialog,   "Base engine settings"
        subMenu = std_separator
        subMenu = protections_dialog,      "Engine protection"
        subMenu = std_separator

    menu = "Fuel"
        subMenu = fuel_setup_dialog,       "Base fuel settings"
        subMenu = std_separator
        groupMenu = "Volumetric efficiency tables"
            groupChildMenu = ve_table1_dialog,      "Volumetric efficiency table 1"
            groupChildMenu = ve_table2_dialog,      "Volumetric efficiency table 2"
        subMenu = std_separator
        
        subMenu = clt_fuel_corr_curve,		"CLT correction"
		subMenu = iat_fuel_corr_curve,		"IAT correction"
        subMenu = fuel_closed_loop_dialog,	"Closed loop fuel correction"
    	subMenu = labmda_target,			"Target lambda"
        subMenu = std_separator

		# Accel enrichment
		subMenu = accel_enrich,				"Acceleration enrichment"
		subMenu = tpsTpsDialog,			    "TPS/TPS acceleration extra fuel"
		subMenu = tpsTspRpmCorrection,      "TPS/TPS extra fuel RPM correction"
        subMenu = std_separator

    menu = "Spark"
        subMenu = ignition_settings_dialog,        "Ignition settings"
        groupMenu = "Ignition tables"
            groupChildMenu = ign_table1_dialog,      "Ignition table 1"
            groupChildMenu = ign_table2_dialog,      "Ignition table 2"
        subMenu = std_separator

        subMenu = clt_timing_corr_cure,		"Coolant temp correction"
        subMenu = std_separator
	
    menu = "Cranking"
		subMenu = cranking_dialog,			"Cranking settings"
		subMenu = std_separator

		subMenu = cltCrankingCurve,			"Cranking Idle Air CLT multiplier"
        subMenu = crankingCltCurve,			"Fuel CLT multiplier"
		subMenu = crankingTpsCurve,			"Fuel TPS multiplier"
		subMenu = std_separator

		subMenu = crankingAdvanceCurve,		"Cranking ignition advance"
		subMenu = std_separator

    menu = "Governer & Control"
        subMenu = governer_settings_dialog,     "Governer settings"
        subMenu = etb_settings_dialog,     "Electronic throttle body settings"
        subMenu = std_separator

    menu = "Fan control"
        subMenu = fan_control_dialog,         "Fan settings"
        subMenu = std_separator

    menu = "Sensors"
        subMenu = tps_sensors_dialog, "Throtte position sensors"
		subMenu = clt_sensor_dialog,	"Coolant temp sensor"
		subMenu = iat_sensor_dialog,	"Intake air temp sensor"
        subMenu = ops_sensor_dialog,    "Oil pressure sensor"
        subMenu = map_sensor_dialog,    "Manifold absolute pressure sensor"
        subMenu = ego_sensor_dialog,    "Exhaust gas temperature sensor"
        subMenu = oxy_sensor_dialog,    "Exhaust gas oxygen sensor"
		subMenu = std_separator

;-------------------------------------------------------------------------------

[KeyActions]
[Datalog]
[FrontPage]
    gauge1 = rpm_gauge
    gauge2 = tps_gauge
    gauge3 = map_gauge
    gauge4 = lambda_gauge
    gauge5 = advance_gauge
    gauge6 = dwell_gauge
    gauge7 = vbatt_gauge
    gauge8 = clt_gauge
    gauge9 = exhaust_gas_temp_gauge
    gauge10 = sync_loss_counter_gauge
;----------------------------------------------------------------------------
;Indicators = OutputChannel off-label on-label, off-bg, off-fg, on-bg, on-fg
;---------- ------------- --------- -------- ------- ------- ------ -----

[VerbiageOverrides]
[ConstantsExtensions]
    requiresPowerCycle = firing_order
    requiresPowerCycle = trigger1_type
    requiresPowerCycle = trigger1_filtering
    requiresPowerCycle = trigger2_type
    requiresPowerCycle = trigger2_filtering
    requiresPowerCycle = trigger2_enabled
    requiresPowerCycle = number_of_injectors
    requiresPowerCycle = injection_mode
    requiresPowerCycle = ignition_mode
    requiresPowerCycle = tps1_calib_is_inverted
    requiresPowerCycle = tps2_calib_is_inverted
    requiresPowerCycle = sensor_clt_type
    requiresPowerCycle = sensor_iat_type
    requiresPowerCycle = sensor_map_type
    requiresPowerCycle = etb1_enabled
    requiresPowerCycle = etb2_enabled
    requiresPowerCycle = sensor_tps1_type
    requiresPowerCycle = sensor_tps2_type

[TurboBaud]
[EventTriggers]
[VeAnalyze]
[WueAnalyze]
[Tools]

[LoggerDefinition]
[SettingContextHelp]
[DatalogViews]
