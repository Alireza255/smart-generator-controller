; This file contains code to make tuner studio operate.
; Author: Alireza Eskandari

; this should stop TS from looking for the CAN ID in the 2nd byte location and allow the page reads to work correctly.
enable2ndByteCanID = false

[TunerStudio]
   versionInfo    = "S"  ; Put this in the title bar.
   queryCommand   = "Q"  ; Verify against signature.
   signature      = "JimStim dev.2025.07"


[PcVariables]


[Constants]
;The primary goal of this section is to map the controller calibration data to referenced variables with Meta data attributes:
;Formatting of a Constant entry:
; name = class, type, offset, shape, units, scale, translate, lo, hi, digits
; new packet serial format with CRC
;   messageEnvelopeFormat = msEnvelope_1.0

	endianness			= little
	nPages				= 1

	pageReadCommand		= "r%2o%2c"
	burnCommand			= "B"
	pageValueWrite		= "w%2o%2c%2v"
	pageChunkWrite		= "W%2o%2c%2v"
	crc32CheckCommand	= "k"


	blockingFactor = 1024 ; max chunk size
    pageSize            = 2360
; This page is used for settings
page = 1
   ;  name       = bits,   type,    offset, bits
   ;  name       = array,  type,    offset, shape, units,     scale, translate,    lo,      hi, digits
   ;  name       = scalar, type,    offset,        units,     scale, translate,    lo,      hi, digits

ve_table = array, F32, 0, [16][16], "%", 1, 0, 0, 255, 0
ve_rpm_bins = array, U16, 1024, [16], "RPM", 1, 0, 0, 8000, 0
ve_load_bins = array, U16, 1056, [16], "kPa", 1, 0, 0, 120, 0
ign_table = array, F32, 1088, [16][16], "deg", 0.5, 0, -40, 0, 1
ign_rpm_bins = array, U16, 2112, [16], "RPM", 1, 0, 0, 8000, 0
ign_load_bins = array, U16, 2144, [16], "kPa", 1, 0, 0, 120, 0
rpm_limiter = scalar, U16, 2176, "RPM", 1, 0
engine_displacement = scalar, U16, 2178, "cc", 1, 0, 100, 5000, 0
firing_order = bits, U08, 2180, [0:2], 0="1342"
fuel_type = bits, U08, 2181, [0:1], 0="Gas", 1="Petrol", 2="Gas and Petrol"
trigger_type = bits, U08, 2182, [0:1], 0="60-2 trigger wheel", 1="other"
trigger_filtering = bits, U08, 2183, [0:1], 0="none", 1="low", 2="medium", 3="aggressive"
trigger_missing_teeth = scalar, U08, 2184, "teeth", 1, 0, 1, 5, 1
trigger_full_teeth = scalar, U08, 2185, "teeth", 1, 0, 6, 100, 1
cranking_rpm_threshold = scalar, F32, 2188, "RPM", 1, 0, 100, 700, 1
cranking_advance = scalar, F32, 2192, "deg", 1, 0, 0, 20, 0.5
cranking_throttle = scalar, F32, 2196, "percent", 1, 0, 1, 30, 0.5
ignition_mode = bits, U08, 2200, [0:1], 0="Ignition off", 1="One coil", 2="Indiviual coils", 3="Wasted spark"
ignition_dwell = scalar, F32, 2204, "ms", 1, 0, 0.5, 4, 0.1
ignition_is_multi_spark = bits, U08, 2208, [0:1], 0="Multi spark enabled", 1="Multi spark disabled"
ignition_multi_spark_number_of_sparks = scalar, U08, 2209, "sparks", 1, 0, 2, 5, 1
ignition_multi_spark_rpm_threshold = scalar, F32, 2212, "RPM", 1, 0, 1800, 3000, 2
ignition_multi_spark_rest_time = scalar, F32, 2216, "ms", 1, 0, 0.5, 1.5, 0.1
stoich_afr_gas = scalar, F32, 2220, "AFR", 1, 0, 5, 20, 0.1
stoich_afr_petrol = scalar, F32, 2224, "AFR", 1, 0, 5, 20, 0.1
tps1_calib_wide_open_throttle_adc_value = scalar, U16, 2228, "", 1, 0, 0, 4095, 1
tps1_calib_closed_throttle_adc_value = scalar, U16, 2230, "", 1, 0, 0, 4095, 1
tps1_calib_is_inverted = bits, U08, 2232, [0:1], 0="No", 1="Yes"
tps2_calib_wide_open_throttle_adc_value = scalar, U16, 2234, "", 1, 0, 0, 4095, 1
tps2_calib_closed_throttle_adc_value = scalar, U16, 2236, "", 1, 0, 0, 4095, 1
tps2_calib_is_inverted = bits, U08, 2238, [0:1], 0="No", 1="Yes"
clt_calib_tempC_1 = scalar, F32, 2240, "degC", 1, 0, -40, 100, 1
clt_calib_tempC_2 = scalar, F32, 2244, "degC", 1, 0, -40, 100, 1
clt_calib_tempC_3 = scalar, F32, 2248, "degC", 1, 0, -40, 100, 1
clt_calib_resistance_1 = scalar, F32, 2252, "ohms", 1, 0, 100, 10000, 1
clt_calib_resistance_2 = scalar, F32, 2256, "ohms", 1, 0, 100, 10000, 1
clt_calib_resistance_3 = scalar, F32, 2260, "ohms", 1, 0, 100, 10000, 1
sensor_iat_type = bits, U08, 2264, [0:2], 0="Bosch 816"
sensor_map_type = bits, U08, 2265, [0:2], 0="Bosch 816"
governer_target_rpm = scalar, F32, 2268, "RPM", 1, 0, 1000, 3000, 1
governer_idle_rpm = scalar, F32, 2272, "RPM", 1, 0, 700, 1250, 1
governer_pid_Kp = scalar, F32, 2276, "", 1, 0, 0, 10, 4
governer_pid_Ki = scalar, F32, 2280, "", 1, 0, 0, 10, 4
governer_pid_Kd = scalar, F32, 2284, "", 1, 0, 0, 10, 4
governer_pid_limit_integrator_min = scalar, F32, 2288, "", 1, 0, 0, 50, 2
governer_pid_limit_integrator_max = scalar, F32, 2292, "", 1, 0, {governer_pid_limit_integrator_min}, 50, 2
governer_pid_derivative_filter_tau = scalar, F32, 2296, "sec", 1, 0, 0, 1, 3
etb1_pid_Kp = scalar, F32, 2300, "", 1, 0, 0, 10, 4
etb1_pid_Ki = scalar, F32, 2304, "", 1, 0, 0, 10, 4
etb1_pid_Kd = scalar, F32, 2308, "", 1, 0, 0, 10, 4
etb1_pid_limit_integrator_min = scalar, F32, 2312, "", 1, 0, 0, 50, 2
etb1_pid_limit_integrator_max = scalar, F32, 2316, "", 1, 0, {etb1_pid_limit_integrator_min}, 50, 2
etb1_pid_derivative_filter_tau = scalar, F32, 2320, "sec", 1, 0, 0, 1, 3
etb2_pid_Kp = scalar, F32, 2324, "", 1, 0, 0, 10, 4
etb2_pid_Ki = scalar, F32, 2328, "", 1, 0, 0, 10, 4
etb2_pid_Kd = scalar, F32, 2332, "", 1, 0, 0, 10, 4
etb2_pid_limit_integrator_min = scalar, F32, 2336, "", 1, 0, 0, 50, 2
etb2_pid_limit_integrator_max = scalar, F32, 2340, "", 1, 0, {etb2_pid_limit_integrator_min}, 50, 2
etb2_pid_derivative_filter_tau = scalar, F32, 2344, "sec", 1, 0, 0, 1, 3
protection_oil_pressure_time = scalar, U08, 2348, "sec", 1, 0, 1, 10, 1
protection_oil_pressure_enabled = bits, U08, 2349, [0:1], 0="No", 1="Yes"
protection_clt_enabled = bits, U08, 2350, [0:1], 0="No", 1="Yes"
protection_clt_load_disconnect_enabled = bits, U08, 2351, [0:1], 0="No", 1="Yes"
protection_clt_shutdown_temprature = scalar, F32, 2352, "degC", 1, 0, 80, 120, 1
protection_clt_load_disconnect_temprature = scalar, F32, 2356, "degC", 1, 0, 80, 120, 1

[OutputChannels]
	ochGetCommand	= "O"

; see TS_OUTPUT_SIZE in console source code
	ochBlockSize	= 101

; Status flags packed into a U32 (4 bytes) at offset 0
status_critical_error = bits, U32, 0, [0:0]
status_check_engine = bits, U32, 0, [1:1]
status_warning = bits, U32, 0, [2:2]
status_need_burn = bits, U32, 0, [3:3]
status_main_relay_on = bits, U32, 0, [4:4]
status_gas_solenoid_on = bits, U32, 0, [5:5]
status_fuel_pump_on = bits, U32, 0, [6:6]
status_o2_heater_on = bits, U32, 0, [7:7]
status_tps1_error = bits, U32, 0, [8:8]
status_tps2_error = bits, U32, 0, [9:9]
status_map_error = bits, U32, 0, [10:10]
status_clt_error = bits, U32, 0, [11:11]
status_iat_error = bits, U32, 0, [12:12]
status_trigger_error = bits, U32, 0, [13:13]
status_ignition_error = bits, U32, 0, [14:14]
status_injector_error = bits, U32, 0, [15:15]
status_rev_limit_ignition = bits, U32, 0, [16:16]
status_rev_limit_etb = bits, U32, 0, [17:17]
status_etb1_ok = bits, U32, 0, [18:18]
status_etb2_ok = bits, U32, 0, [19:19]
status_fan1_on = bits, U32, 0, [20:20]
status_fan2_on = bits, U32, 0, [21:21]
status_fuel_pressure_low_gas = bits, U32, 0, [22:22]
status_fuel_pressure_low_petrol = bits, U32, 0, [23:23]
status_cranking = bits, U32, 0, [24:24]
status_running = bits, U32, 0, [25:25]
status_trigger_synced = bits, U32, 0, [26:26]
status_reserved1 = bits, U32, 0, [27:27]
status_reserved2 = bits, U32, 0, [28:28]
status_reserved3 = bits, U32, 0, [29:29]
status_reserved4 = bits, U32, 0, [30:30]
status_reserved5 = bits, U32, 0, [31:31]


; Scalar channels starting at offset 4
RPM_value = scalar, F32, 4, "RPM", 1, 0              ; Engine speed
MAP_value = scalar, F32, 8, "kPa", 1, 0           ; Manifold pressure
TPS_value = scalar, F32, 12, "%", 1, 0            ; Throttle position
lambda_value = scalar, F32, 16, "", 1, 0          ; Lambda (AFR ratio), adjusted scale
ignition_advance_value = scalar, F32, 20, "deg", 1, 0 ; Ignition timing
spark_dwell_value = scalar, F32, 24, "ms", 1, 0      ; Coil dwell time
VBatt_value = scalar, F32, 28, "V", 1, 0           ; Battery voltage, adjusted scale
coolant_temp_value = scalar, F32, 32, "C", 1, 0    ; Coolant temp, adjusted scale
sync_loss_count = scalar, U16, 36, "", 1, 0          ; Sync loss counter
iat_value = scalar, F32, 38, "C", 1, 0             ; Intake air temp
ego_correction = scalar, F32, 42, "%", 1, 0          ; Exhaust gas O2 correction
warmup_enrichment = scalar, F32, 46, "%", 1, 0       ; Warmup fuel enrichment
acceleration_enrichment = scalar, F32, 50, "%", 1, 0 ; Accel fuel enrichment
gamma_enrichment = scalar, F32, 54, "%", 1, 0        ; Total fuel enrichment
ve1 = scalar, F32, 58, "%", 1, 0                     ; Volumetric efficiency 1
ve2 = scalar, F32, 62, "%", 1, 0                     ; Volumetric efficiency 2
lambda_target = scalar, F32, 66, "", 1, 0         ; Target lambda
tps_adc_value = scalar, U16, 70, "", 1, 0            ; TPS ADC raw value
injector_pulse_width = scalar, F32, 72, "ms", 1, 0   ; Injector pulse width
gas_valve_position = scalar, F32, 76, "%", 1, 0      ; Gas valve position
target_rpm = scalar, F32, 80, "RPM",  1, 0    ; Target engine speed
fuel_pressure_gas = scalar, F32, 84, "kPa", 1, 0     ; Gas fuel pressure
fuel_pressure_petrol = scalar, F32, 88, "kPa", 1, 0  ; Petrol fuel pressure
spark_per_ignition_event_count = scalar, U08, 92, "", 1, 0 ; Sparks per ignition
fuel_load_gas = scalar, F32, 93, "%", 1, 0           ; Fuel load gas
fuel_load_petrol = scalar, F32, 97, "%", 1, 0        ; Fuel load petrol


[Replay]
[ExtendedReplay]
[TableEditor]
	table = ve_table_tbl,  ve_table_map,  "VE Table",	1
		xBins		= ve_rpm_bins,  RPM_value
		yBins		= ve_load_bins,   MAP_value
		zBins		= ve_table
;		gridHeight	= 2.0
		gridOrient	= 250,	0, 340 ; Space 123 rotation of grid in degrees.
		upDownLabel	= "(RICHER)", "(LEANER)"


[GaugeConfigurations]
   ;-------------------------------------------------------------------------------
   ; Define a gauge's characteristics here, then go to a specific layout
   ; block (Tuning or FrontPage) and use the name you've defined here to
   ; display that gauge in a particular position.
   ;
   ; Name  = Case-sensitive, user-defined name for this gauge configuration.
   ; Var   = Case-sensitive name of variable to be displayed, see the
   ;         OutputChannels block in this file for possible values.
   ; Title = Title displayed at the top of the gauge.
   ; Units = Units displayed below value on gauge.
   ; Lo    = Lower scale limit of gauge.
   ; Hi    = Upper scale limit of gauge.
   ; LoD   = Lower limit at which danger color is used for gauge background.
   ; LoW   = Lower limit at which warning color is used.
   ; HiW   = Upper limit at which warning color is used.
   ; HiD   = Upper limit at which danger color is used.
   ; vd    = Decimal places in displayed value
   ; ld    = Label decimal places for display of Lo and Hi, above.

    gaugeCategory = "Main"
    ;Name               Var            Title                                Units     Lo     Hi     LoD    LoW   HiW   HiD vd ld
    rpm_gauge			= RPM_value,			"RPM - engine speed",		"RPM",		0, 5000,	500, 500, 4000,  5000,	0,	0
	map_gauge		    = MAP_value,					"MAP",		"kPa",		0,	120,		10,	0,	80,	95,	0,	0
	tps_gauge			= TPS_value,		"Throttle position",			"%",		0,	100,		0,		0,	100,	100,	1,	1
	lambda_gauge		= lambda_value, "Lambda",	"",		0.65,	1.2,		0.7,	0.75,		1.1,	1.15,	3,	2
	advance_gauge       = ignition_advance_value,		"Timing: ignition",	"degrees",	-100,	100,	-999,	-999,	999,	999,	1, 1
	dwell_gauge		    = spark_dwell_value,			"Dwell",		"mSec",		0,	10,	0.5,	1.0,	6.0,	8.0,	1, 1
	vbatt_gauge		    = VBatt_value,		"Battery",			"V",		0,	18,		6,	10,		15,	16,	1,	1
    clt_gauge			= coolant_temp_value,		"Coolant temp",		"C",		-40,	140,	-15,		1,		95,	110,	1,	1




[ControllerCommands]

[PortEditor]
[CurveEditor]
[TriggerWheel]
[UiDialogs]

[UiDialogs]
dialog = engine_constants_dialog, "Engine Constants Settings"
    field = "Engine displacement", engine_displacement
dialog = trigger_setup_dialog, "Trigger setup"
    field = "Trigger type", trigger_type
    field = "Trigger filtering", trigger_filtering
    field = "Missing teeth", trigger_missing_teeth
    field = "Full teeth", trigger_full_teeth
dialog = limits_and_fallbacks_dialog, "Limits and fallbacks dialog"
    field = "RPM limiter", rpm_limiter
dialog = oil_pressure_protection_dialog, "Oil pressure protection"
    field = "Enable oil pressure protection", protection_oil_pressure_enabled
    field = "Timeout (sec)", protection_oil_pressure_time, {protection_oil_pressure_enabled}
dialog = coolant_temp_protection_dialog, "Coolant temp protection"
    field = "Enable coolant temp protection", protection_clt_enabled
    field = "Engine shutdown temp (degC)", protection_clt_shutdown_temprature
    field = "Load disconnect temp (degC)", protection_clt_load_disconnect_temprature

dialog = fuel_setup_dialog, "Fuel settings"
    field = "Fuel type", fuel_type
    field = "Gas stoich air fuel ratio", stoich_afr_gas, {fuel_type != 1}
    field = "Petrol stoich air fuel ratio", stoich_afr_petrol, {fuel_type != 0}

dialog = ve_table_dialog, "Volumetric efficiency table", border
    panel = ve_table_tbl, Center

dialog = clt_fuel_corr_curve, "CLT Correction Curve", border
    
dialog = iat_fuel_corr_curve, "IAT Correction Curve", border
    
dialog = fuel_closed_loop_dialog, "Closed Loop Fuel Correction"
    
dialog = labmda_target, "Target Lambda Table", border
    
dialog = accel_enrich, "Acceleration Enrichment Settings"
    
dialog = tpsTpsDialog, "TPS/TPS Acceleration Extra Fuel"
    
dialog = tpsTspRpmCorrection, "TPS/TPS Extra Fuel RPM Correction"
    
dialog = ignition_settings, "Ignition Settings"
    field = "Ignition mode", ignition_mode
    field = "Multi spark enabled", ignition_is_multi_spark, {ignition_mode == 2 || ignition_mode == 3}
    field = "Multi spark number of sparks", ignition_multi_spark_number_of_sparks, {ignition_is_multi_spark == 0 && (ignition_mode == 2 || ignition_mode == 3)}
    field = "Multi spark RPM threshold", ignition_multi_spark_rpm_threshold, {ignition_is_multi_spark == 0 && (ignition_mode == 2 || ignition_mode == 3)}
    field = "Multi spark rest time", ignition_multi_spark_rest_time, {ignition_is_multi_spark == 0 && (ignition_mode == 2 || ignition_mode == 3)}

dialog = dwell_settings, "Dwell Settings"
    field = "Ignition dwell (ms)", ignition_dwell

dialog = ignition_table, "Ignition Advance Table", border
    
dialog = multi_spark_settings, "Multispark Settings"
    
dialog = clt_timing_corr_cure, "Coolant Temp Correction Curve", border
    
dialog = crankingDialog, "Cranking Settings"
    field = "Cranking RPM threshold", cranking_rpm_threshold
    field = "Cranking advance", cranking_advance
    field = "Cranking throttle", cranking_throttle

dialog = postCrankingEnrichmentTbl, "After-Start Enrichment Table", border
    
dialog = primingFuelPulsePanel, "Priming Pulse Settings"
    
dialog = cltCrankingCurve, "Fuel CLT Multiplier Curve", border
    
dialog = crankingTpsCurve, "Fuel TPS Multiplier Curve", border
    
dialog = crankingAdvanceCurve, "Cranking Ignition Advance Curve", border
    
dialog = air_control_hardware, "Air Control Hardware"
    
dialog = air_control_settings, "Air Control Settings"
    field = "Governer PID Kp", governer_pid_Kp
    field = "Governer PID Ki", governer_pid_Ki
    field = "Governer PID Kd", governer_pid_Kd
    field = "Governer PID Integrator Min", governer_pid_limit_integrator_min
    field = "Governer PID Integrator Max", governer_pid_limit_integrator_max
    field = "Governer PID Derivative Filter Tau", governer_pid_derivative_filter_tau
    field = "ETB1 PID Kp", etb1_pid_Kp
    field = "ETB1 PID Ki", etb1_pid_Ki
    field = "ETB1 PID Kd", etb1_pid_Kd
    field = "ETB1 PID Integrator Min", etb1_pid_limit_integrator_min
    field = "ETB1 PID Integrator Max", etb1_pid_limit_integrator_max
    field = "ETB1 PID Derivative Filter Tau", etb1_pid_derivative_filter_tau
    field = "ETB2 PID Kp", etb2_pid_Kp
    field = "ETB2 PID Ki", etb2_pid_Ki
    field = "ETB2 PID Kd", etb2_pid_Kd
    field = "ETB2 PID Integrator Min", etb2_pid_limit_integrator_min
    field = "ETB2 PID Integrator Max", etb2_pid_limit_integrator_max
    field = "ETB2 PID Derivative Filter Tau", etb2_pid_derivative_filter_tau

dialog = clt_idle_rpm_curve, "Target Idle RPM Curve", border
    
dialog = governer_target_rpm_dialog, "Governer Target RPM" 
    field = "Governer Target RPM", governer_target_rpm
    field = "Governer Idle RPM", governer_idle_rpm

dialog = fan_control_hardware, "Fan Control Hardware"
    
dialog = fan_control_temp, "Fan Temperatures"
    
dialog = cltSensor, "Coolant Temp Sensor Calibration"
    
dialog = iatSensor, "Intake Air Temp Sensor Calibration"
    
dialog = oilPressureSensor, "Oil Pressure Sensor Calibration"
    
dialog = egoSettings, "O2 Sensor Settings"
    
dialog = widebandConfig, "Alireza Wideband Controller Config"

[UserDefined]
[FTPBrowser]
[Menu]

   ;----------------------------------------------------------------------------
   ;  There are five pre-defined values that may be used to define your menus.
   ;  The first four allow access to the "standard" dialog boxes, the last one
   ;  merely draws a separator (horizontal line) in the menu.
   ;
   ;     std_constants
   ;     std_enrichments
   ;     std_realtime
   ;     std_warmup
   ;
   ;     std_separator
   ;
   ;  If you use any of the std_constants, std_enrichments or std_warmup
   ;  editors, they may be optionally suffixed with a page number (only
   ;  useful for multi-page code variants), which causes them to edit the
   ;  specified page.  If you leave off the page specifier, they edit logical
   ;  page one as specified in the Constants section.
   ;
   ;  There are four special menu names, which when used append to the standard
   ;  menus of the same name instead of creating a new one.  The menu names
   ;  are "File", "Communications", "Tools" and "Help".
   ;
   ;----------------------------------------------------------------------------

menuDialog = main

   menu = "Settings"
        subMenu = engine_constants_dialog,   "Engine Constants"
        subMenu = trigger_setup_dialog,    "Trigger Setup"
        subMenu = std_separator
        groupMenu = "Limits and protection"
            groupChildMenu = limits_and_fallbacks_dialog,      "Limits and fallbacks"
            groupChildMenu = oil_pressure_protection_dialog,   "Oil pressure protection"
            groupChildMenu = coolant_temp_protection_dialog,   "Coolant temp protection"
        subMenu = std_separator

    menu = "Fuel"
        subMenu = fuel_setup_dialog,       "Fuel type settings"
        subMenu = std_separator

        subMenu = ve_table_dialog, "VE Table (2D)"
        subMenu = std_separator
        
        subMenu = clt_fuel_corr_curve,		"CLT correction"
		subMenu = iat_fuel_corr_curve,		"IAT correction"
        subMenu = fuel_closed_loop_dialog,	"Closed loop fuel correction"
    	subMenu = labmda_target,			"Target lambda"
        subMenu = std_separator

		# Accel enrichment
		subMenu = accel_enrich,				"Acceleration enrichment"
		subMenu = tpsTpsDialog,			    "TPS/TPS acceleration extra fuel"
		subMenu = tpsTspRpmCorrection,      "TPS/TPS extra fuel RPM correction"
        subMenu = std_separator

    menu = "Spark"
        subMenu = ignition_settings,        "Ignition settings"
        subMenu = dwell_settings,			"Dwell"
        subMenu = std_separator
        
        subMenu = ignition_table,           "Advance"
		subMenu = multi_spark_settings,		"Multispark"
        subMenu = std_separator


        subMenu = clt_timing_corr_cure,		"Coolant temp correction"
        subMenu = std_separator
	
    menu = "Cranking"
		subMenu = crankingDialog,			"Cranking settings"
		subMenu = postCrankingEnrichmentTbl,"After-start enrichment"
		subMenu = primingFuelPulsePanel,	"Priming pulse"
		subMenu = std_separator

		subMenu = cltCrankingCurve,			"Cranking Idle Air CLT multiplier"
        subMenu = crankingCltCurve,			"Fuel CLT multiplier"
		subMenu = crankingTpsCurve,			"Fuel TPS multiplier"
		subMenu = std_separator

		subMenu = crankingAdvanceCurve,		"Cranking ignition advance"
		subMenu = std_separator

    menu = "Idle and Governer"
        subMenu = air_control_hardware,     "Air control hardware"
        subMenu = air_control_settings,     "Air control settings"
        subMenu = std_separator

        subMenu = clt_idle_rpm_curve,       "Target idle RPM"
        subMenu = governer_target_rpm       "Governer target RPM"
        subMenu = std_separator
    
    menu = "Fan control"
        subMenu = fan_control_hardware,     "Fan control hardware"
        subMenu = fan_control_temp,         "Fan tempratures"
        subMenu = std_separator

    menu = "Sensors"
		# Thermistors
		subMenu = cltSensor,				"Coolant temp sensor"
		subMenu = iatSensor,				"Intake air temp sensor"
		subMenu = std_separator

		# Misc sensors
		subMenu = oilPressureSensor,	    "Oil pressure"
		subMenu = std_separator

		# O2 sensor(s)
		subMenu = egoSettings,				"O2 sensor"
		subMenu = widebandConfig,			"Alireza Wideband Controller"
		subMenu = std_separator

;-------------------------------------------------------------------------------

[KeyActions]
[Datalog]
[FrontPage]
    gauge1 = rpm_gauge
    gauge2 = tps_gauge
    gauge3 = map_gauge
    gauge4 = lambda_gauge
    gauge5 = advance_gauge
    gauge6 = dwell_gauge
    gauge7 = vbatt_gauge
    gauge8 = clt_gauge
;			=							expression,				off-label,				on-label, off-bg, off-fg,  on-bg,  on-fg

	indicator =						{ status_need_burn },	"Settings saved",	"Unsaved changes",  white,  black, yellow,  black
	indicator =						{ status_warning },		"No warnings",			"Warning",  white,  black, yellow,  black
	indicator =					{ status_trigger_error},			"Trigger OK",		"Trigger ERR",  white,  black,	red,  black
    indicator =					{ !status_trigger_synced},			"Trigger synced",		"Trigger not synced",  green,  black,	yellow,  black
    indicator =					{ !status_running},			"Engine running",		"Engine not running",  green,  black,	white,  black
    indicator =					{ !status_cranking},			"Engine cranking",		"Engine not cranking",  orange,  black,	white,  black
	; minor info
	indicator =				{ status_fan1_on },			"Fan off",				"Fan on",  white,  black,  green,  black
	indicator =				{ status_fan2_on },			"Fan 2 off",			"Fan 2 on",  white,  black,  green,  black
	indicator =				{ status_main_relay_on },		"Main relay off",	"Main relay on",  white,  black,  green,  black
    indicator =				{ status_gas_solenoid_on },		"Gas solenoid off",	"Gas solenoid on",  white,  black,  green,  black
    indicator =             { status_fuel_pump_on },	"Fuel pump off",	"Fuel pump on",  white,  black,  green,  black
	;			=							expression,				off-label,				on-label, off-bg, off-fg,  on-bg,  on-fg
	indicator =					{ status_clt_error },				"CLT OK",			"CLT error",  white,  black,	red,  black
	indicator =					{ status_iat_error },				"IAT OK",			"IAT error",  white,  black,	red,  black
    indicator =             { status_etb1_ok },				"ETB1 OK",			"ETB1 error",  white,  black,	red,  black
    indicator =             { status_etb2_ok },				"ETB2 OK",			"ETB2 error",  white,  black,	red,  black

    indicator =             { status_rev_limit_etb },				"No ETB RPM Limit",			"ETB RPM Limit",  white,  black, yellow,  black
    indicator =             { status_rev_limit_ignition }, "No ignition RPM Limit",			"Ignition RPM Limit", white,  black,	red,  black

[VerbiageOverrides]
[ConstantExtensions]
[TurboBaud]
[EventTriggers]
[VeAnalyze]
[WueAnalyze]
[Tools]

[LoggerDefinition]
[SettingContextHelp]
[DatalogViews]
